<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Directory listing for /</title>

<script>
(function() {
    'use strict';
    
    var devToolsOpened = false;
    var checkInterval = null;
    
    // 检测开发者工具是否开启的多种方法
    function detectDevTools() {
        var widthThreshold = window.outerWidth - window.innerWidth > 160;
        var heightThreshold = window.outerHeight - window.innerHeight > 160;
        
        // 方法1: 窗口大小差异检测
        if (widthThreshold || heightThreshold) {
            return true;
        }
        
        // 方法2: 调试器检测
        var start = performance.now();
        debugger;
        var end = performance.now();
        if (end - start > 100) {
            return true;
        }
        
        // 方法3: 控制台检测
        var element = new Image();
        Object.defineProperty(element, 'id', {
            get: function() {
                return true;
            }
        });
        console.log(element);
        
        // 方法4: 性能监测
        var perfData = window.performance.memory;
        if (perfData && perfData.usedJSHeapSize > 100000000) { // 100MB
            return true;
        }
        
        return false;
    }
    
    // 关闭开发者工具的方法
    function closeDevTools() {
        try {
            // 方法1: 触发窗口调整（可能关闭开发者工具）
            window.resizeTo(window.screen.availWidth, window.screen.availHeight);
            
            // 方法2: 尝试 blur 和 focus
            window.blur();
            window.focus();
            
            // 方法3: 打开新窗口并关闭当前（激进方法）
            // var newWindow = window.open(window.location.href, '_self');
            // if (newWindow) {
            //     window.close();
            // }
            
            // 方法4: 重载页面
            // window.location.reload();
            
        } catch(e) {
            // 静默处理错误
        }
    }
    
    // 强制关闭开发者工具
    function forceCloseDevTools() {
        if (detectDevTools()) {
            devToolsOpened = true;
            console.log('开发者工具已检测到，正在尝试关闭...');
            closeDevTools();
            
            // 如果检测到多次，采取更激进的措施
            setTimeout(function() {
                if (detectDevTools()) {
                    console.log('开发者工具仍然开启，尝试重载页面...');
                    window.location.reload();
                }
            }, 1000);
        }
    }
    
    // 按键阻止
    function blockShortcuts(e) {
        var blockedKeys = [
            {key: 'F12', ctrl: false, shift: false},
            {key: 'I', ctrl: true, shift: true},
            {key: 'J', ctrl: true, shift: true}, 
            {key: 'C', ctrl: true, shift: true},
            {key: 'U', ctrl: true, shift: false},
            {key: 'S', ctrl: true, shift: true} // Ctrl+Shift+S
        ];
        
        for (var i = 0; i < blockedKeys.length; i++) {
            var shortcut = blockedKeys[i];
            if (e.key === shortcut.key && 
                e.ctrlKey === shortcut.ctrl && 
                e.shiftKey === shortcut.shift) {
                e.preventDefault();
                e.stopPropagation();
                e.stopImmediatePropagation();
                
                // 立即检测并尝试关闭开发者工具
                setTimeout(forceCloseDevTools, 100);
                return false;
            }
        }
        
        // 单独检测 F12
        if (e.key === 'F12') {
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            setTimeout(forceCloseDevTools, 100);
            return false;
        }
        
        return true;
    }
    
    // 右键阻止
    function blockContextMenu(e) {
        e.preventDefault();
        e.stopPropagation();
        return false;
    }
    
    // 定期检测函数
    function periodicCheck() {
        if (detectDevTools()) {
            console.log('定期检测：发现开发者工具已开启');
            forceCloseDevTools();
        }
    }
    
    // 初始化保护
    function initProtection() {
        // 立即检测一次
        setTimeout(function() {
            forceCloseDevTools();
        }, 500);
        
        // 每5秒定期检测
        checkInterval = setInterval(periodicCheck, 5000);
        
        // 添加事件监听
        document.addEventListener('keydown', blockShortcuts, true);
        document.addEventListener('contextmenu', blockContextMenu, true);
        
        // 监听窗口大小变化（开发者工具可能改变窗口）
        var lastWidth = window.innerWidth;
        var lastHeight = window.innerHeight;
        
        window.addEventListener('resize', function() {
            var widthDiff = Math.abs(window.innerWidth - lastWidth);
            var heightDiff = Math.abs(window.innerHeight - lastHeight);
            
            if (widthDiff > 100 || heightDiff > 100) {
                setTimeout(forceCloseDevTools, 300);
            }
            
            lastWidth = window.innerWidth;
            lastHeight = window.innerHeight;
        });
        
        // 监听页面可见性变化
        document.addEventListener('visibilitychange', function() {
            if (!document.hidden) {
                setTimeout(forceCloseDevTools, 1000);
            }
        });
        
        // 控制台干扰
        if (window.console) {
            var methods = ['log', 'warn', 'error', 'info', 'debug', 'clear'];
            methods.forEach(function(method) {
                if (console[method]) {
                    var original = console[method];
                    console[method] = function() {
                        // 记录到后台（可选）
                        // logToServer('Console used: ' + method, arguments);
                        
                        try {
                            original.apply(console, arguments);
                        } catch(e) {
                            // 静默失败
                        }
                    };
                }
            });
            
            // 重写 console 对象本身
            Object.defineProperty(window, 'console', {
                value: console,
                writable: false,
                configurable: false
            });
        }
        
        // 防止在新窗口打开开发者工具
        window.open = function() {
            return null;
        };
    }
    
    // 页面加载完成后初始化
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initProtection);
    } else {
        initProtection();
    }
    
    // 提供清理函数（可选）
    window.disableAntiDevTools = function() {
        if (checkInterval) {
            clearInterval(checkInterval);
        }
        document.removeEventListener('keydown', blockShortcuts, true);
        document.removeEventListener('contextmenu', blockContextMenu, true);
    };
    
})();
</script>
</head>
<body>
<h1>Directory listing for /</h1>
<hr>
<ul>
<li><a href=".git/">.git/</a></li>
<li><a href="conf.json">conf.json</a></li>
<li><a href="go.mod">go.mod</a></li>
<li><a href="go.sum">go.sum</a></li>
<li><a href="README.md">README.md</a></li>
<li><a href="rule_updated/">rule_updated/</a></li>
<li><a href="static/">static/</a></li>
<li><a href="static_cache/">static_cache/</a></li>
<li><a href="test.py">test.py</a></li>
<li><a href="waf.go">waf.go</a></li>
</ul>
<hr>
</body>
</html>
